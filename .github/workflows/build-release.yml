name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.0.1, etc.
  workflow_dispatch:  # Allows manual trigger from GitHub Actions tab

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --name="LithophaneGenerator" `
          --windowed `
          --onefile `
          --add-data="README.md;." `
          --hidden-import=vtkmodules `
          --hidden-import=vtkmodules.all `
          --hidden-import=vtkmodules.qt.QVTKRenderWindowInteractor `
          --hidden-import=vtkmodules.util `
          --hidden-import=vtkmodules.util.numpy_support `
          --collect-all=vtk `
          --collect-all=vtkmodules `
          viewer.py

    - name: Get version from tag
      id: get_version
      run: |
        if ($env:GITHUB_REF -match 'refs/tags/v(.*)') {
          $version = $matches[1]
        } else {
          $version = "dev-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
        }
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Create ZIP archive
      run: |
        Compress-Archive -Path dist/LithophaneGenerator.exe, README.md -DestinationPath LithophaneGenerator-Windows-${{ steps.get_version.outputs.VERSION }}.zip
      shell: pwsh

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: LithophaneGenerator-Windows
        path: LithophaneGenerator-Windows-*.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: LithophaneGenerator-Windows-*.zip
        body: |
          ## 🎉 Lithophane Generator Release ${{ steps.get_version.outputs.VERSION }}

          ### 📦 다운로드
          Windows 사용자는 아래 파일을 다운로드하세요:
          - `LithophaneGenerator-Windows-${{ steps.get_version.outputs.VERSION }}.zip`

          ### 🚀 사용 방법
          1. ZIP 파일 압축 해제
          2. `LithophaneGenerator.exe` 실행
          3. 이미지를 불러와서 리토페인으로 변환!

          ### ✨ 주요 기능
          - 이미지를 3D 리토페인으로 자동 변환
          - 실시간 3D 미리보기
          - STL 파일로 내보내기 (3D 프린팅 가능)
          - 사용자 친화적인 GUI

          ### 📋 시스템 요구사항
          - Windows 10/11 (64-bit)
          - 최소 4GB RAM (8GB 추천)

          ### 🐛 버그 리포트
          문제가 발생하면 [Issues](https://github.com/${{ github.repository }}/issues)에 등록해주세요.

          ---
          **전체 변경 내역은 아래를 참조하세요.**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller
      run: |
        pyinstaller --name="LithophaneGenerator" \
          --windowed \
          --onefile \
          --add-data="README.md:." \
          --hidden-import=vtkmodules \
          --hidden-import=vtkmodules.all \
          --hidden-import=vtkmodules.qt.QVTKRenderWindowInteractor \
          --hidden-import=vtkmodules.util \
          --hidden-import=vtkmodules.util.numpy_support \
          --collect-all=vtk \
          --collect-all=vtkmodules \
          viewer.py

    - name: Get version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="dev-$(date +%Y%m%d-%H%M%S)"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Create ZIP archive
      run: |
        cd dist
        zip -r ../LithophaneGenerator-macOS-${{ steps.get_version.outputs.VERSION }}.zip LithophaneGenerator.app ../README.md
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: LithophaneGenerator-macOS
        path: LithophaneGenerator-macOS-*.zip

    - name: Add to Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: LithophaneGenerator-macOS-*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
